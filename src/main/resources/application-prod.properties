# Production environment configuration
spring.application.name=easygroup
server.port=8080

# Actuator configuration with minimal endpoints for production
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
management.endpoints.web.base-path=/management

# Logging configuration for production (minimal)
logging.level.root=WARN
logging.level.com.easygroup=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=/var/log/easygroup.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=10

# Jackson configuration
spring.jackson.serialization.indent-output=false

# Database configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:easygroup}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
logging.level.org.hibernate.SQL=debug

# Disable development tools
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Cache configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=3600s

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# Security settings
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=20
server.tomcat.max-connections=10000
server.tomcat.accept-count=100

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=2048

# Security configuration
cors.urls=${CORS_URLS:http://localhost:5173}
cors.enabled=${CORS_ENABLED:false}
csrf.enabled=${CSRF_ENABLED:false}
samesite.cookie.enabled=${SAMESITE_COOKIE_ENABLED:false}

# JWT configuration
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:86400000}

# SMTP

smtp.server=${SMTP_SERVER:}
smtp.port=${SMTP_PORT:}
smtp.username=${SMTP_USERNAME:}
smtp.password=${SMTP_PASSWORD:}
application.url=https://contes-et-legendes.com/easy-api
mail.from=${MAIL_FROM}
